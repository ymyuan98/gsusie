estimate_prior_method = "optim",
robust_estimation = T,
robust_method = "huber")
# Bisquare weighting
# print("gs-bisquare")
# res_gs_bs <- gsusie(X, y, family = "binomial",
#                     max_iters = 200,
#                     estimate_prior_method = "optim",
#                     robust_estimation = T,
#                     robust_method = "bisquare")
# Weight dropped by fractions - 0.01
print("gs-fraction")
res_gs_fc1 <- gsusie(X, y, family = "binomial",
max_iters = 200,
estimate_prior_method = "optim",
robust_estimation = T,
robust_method = "simple",
simple_outlier_fraction = 0.01,
simple_outlier_thres = NULL)
res_su <- susie(X, y)
res_glmnet <- cv.glmnet(x = X[, -(pp+1)], y, family = "binomial")
## Evaluate
## convergeFlags
convergeFlags$gs_vn[tt]  <- res_gs_vn$converged
convergeFlags$gs_hb[tt]  <- res_gs_hb$converged
# convergeFlags$gs_bs[tt]  <- res_gs_bs$converged
convergeFlags$gs_fc1[tt] <- res_gs_fc1$converged
## ELBO
ELBO$gs_vn[tt]  <- res_gs_vn$elbo[length(res_gs_vn$elbo)]
ELBO$gs_hb[tt]  <- res_gs_hb$elbo[length(res_gs_hb$elbo)]
# ELBO$gs_bs[tt]  <- res_gs_bs$elbo[length(res_gs_bs$elbo)]
ELBO$gs_fc1[tt] <- res_gs_fc1$elbo[length(res_gs_fc1$elbo)]
#####################################
## Evaluations - variable selection
### Number of variables selected
NumVs$gs_vn[tt]  <- length(get_selected_vars(res_gs_vn))
NumVs$gs_hb[tt]  <- length(get_selected_vars(res_gs_hb))
# NumVs$gs_bs[tt]  <- length(get_selected_vars(res_gs_bs))
NumVs$gs_fc1[tt] <- length(get_selected_vars(res_gs_fc1))
NumVs$gn[tt]     <- length(get_selected_vars(res_glmnet))
NumVs$gn10[tt]   <- length(get_selected_vars(res_glmnet, glmnet_top_n = 10)) # 10
### Precision
PPV$gs_vn[tt]  <- evaluate_ppv(get_selected_vars(res_gs_vn),  effect_idx)
PPV$gs_hb[tt]  <- evaluate_ppv(get_selected_vars(res_gs_hb),  effect_idx)
# PPV$gs_bs[tt]  <- evaluate_ppv(get_selected_vars(res_gs_bs),  effect_idx)
PPV$gs_fc1[tt] <- evaluate_ppv(get_selected_vars(res_gs_fc1), effect_idx)
PPV$gn[tt]     <- evaluate_ppv(get_selected_vars(res_glmnet), effect_idx)
PPV$gn10[tt] <- evaluate_ppv(get_selected_vars(res_glmnet, glmnet_top_n = 10),
effect_idx)
### Recall
TPR$gs_vn[tt]  <- evaluate_tpr(get_selected_vars(res_gs_vn),  effect_idx)
TPR$gs_hb[tt]  <- evaluate_tpr(get_selected_vars(res_gs_hb),  effect_idx)
# TPR$gs_bs[tt]  <- evaluate_tpr(get_selected_vars(res_gs_bs),  effect_idx)
TPR$gs_fc1[tt] <- evaluate_tpr(get_selected_vars(res_gs_fc1), effect_idx)
TPR$gn[tt]     <- evaluate_tpr(get_selected_vars(res_glmnet), effect_idx)
TPR$gn10[tt] <- evaluate_tpr(get_selected_vars(res_glmnet, glmnet_top_n = 10),
effect_idx)
}
saveRDS(list(Precision = PPV,
Recall    = TPR,
NumVs     = NumVs,
convergeFlags = convergeFlags,
ELBO = ELBO),
file = .save.path %&%.filenames)
})
View(PPV)
View(TPR)
View(NumVs)
View(ELBO)
View(convergeFlags)
install.packages("Rfast")
aa <- source(.save.path %&% .filename)
.save.path
.save.path %&%.filenames
getwd()
.save.path <- "./tests/"
.save.path <- "./tests/"
.filenames <- gen_filenames(nn, pp, h2, "logistic")
rm(.filename)
saveRDS(list(Precision = PPV,
Recall    = TPR,
NumVs     = NumVs,
convergeFlags = convergeFlags,
ELBO = ELBO),
file = .save.path %&%.filenames)
.filenames <- gen_filenames(nn, pp, h2, "logistic", "_")
.filenames
saveRDS(list(Precision = PPV,
Recall    = TPR,
NumVs     = NumVs,
convergeFlags = convergeFlags,
ELBO = ELBO),
file = .save.path %&%.filenames)
getwd()
.save.path <- getwd() %&% "/tests/"
.save.path
.filenames <- gen_filenames(nn, pp, h2, "logistic", "t")
.filenames
saveRDS(list(Precision = PPV,
Recall    = TPR,
NumVs     = NumVs,
convergeFlags = convergeFlags,
ELBO = ELBO),
file = .save.path %&%.filenames)
View(PPV)
saveRDS(list(Precision = PPV,
Recall    = TPR,
NumVs     = NumVs,
convergeFlags = convergeFlags,
ELBO = ELBO),
# file = .save.path %&%.filenames
file = .filenames
)
getwd()
getwd()
getwd()
.save.path <- "./gsusie/tests/"
saveRDS(list(Precision = PPV,
Recall    = TPR,
NumVs     = NumVs,
convergeFlags = convergeFlags,
ELBO = ELBO),
file = .save.path %&%.filenames
# file = .filenames
)
`logistic-n500-p1000-h5` <- readRDS("~/Dropbox/genetics.susie/gsusie/tests/t_logistic-n500-p1000-h5.rds")
rm(`logistic-n500-p1000-h5`)
aa <- list(zz = 1, ff = 2, dd = 3)
aa
unlist(aa)
detach(aa)
aa <- list(PPV, ELBO)
detach(aa)
aa
unlist(aa)
?unlist
unlist(aa, recursive = F)
l.ex <- list(a = list(1:5, LETTERS[1:5]), b = "Z", c = NA)
unlist(l.ex, recursive = FALSE)
unlist(l.ex, recursive = TRUE)
l.ex
?list2env
l.ex
list2env(l.ex)
rm(aa)
a
l.ex$a
e <- list2env(l.ex)
e
rm(e)
L <- list(a = 1, b = 2:4, p = pi, ff = gl(3, 4, labels = LETTERS[1:3]))
e <- list2env(L)
ls(e)
e
a
ls(e)
rm(e)
rm(L)
rm(l.ex)
RES <- list(Precision = PPV,
Recall    = TPR,
NumVs     = NumVs,
convergeFlags = convergeFlags,
ELBO = ELBO)
RES
nn <- 500
pp <- 1000
h2 <- 0.5
X <- matrix(rnorm(nn * pp), ncol = pp)
effect_idx <- sort(sample(1 : pp, size = 5))
bb <- rnorm(5, sd = sqrt(2))
data.frame(variable = paste0("X", effective_idx), effect_size = sqrt(h2) * bb)
Eta <- sqrt(h2) * X[,effect_idx, drop = F] %*% as.matrix(bb) +
sqrt(1 - h2) * rnorm(nn)
y <- rbinom(nn, 1, prob = expit(Eta))
X <- cbind(X, 1)  # Intercept is always put at last
colnames(X) <- paste0("X", c(1:pp, 0))
# Vanilla:
res_gs_vn <- gsusie(X, y, family = "binomial",
max_iters = 200,
estimate_prior_variance = T,
estimate_prior_method = "optim",
robust_estimation = F)
# Huber-weighting:
res_gs_hb <- gsusie(X, y, family = "binomial",
max_iters = 200,
estimate_prior_variance = F,
estimate_prior_method = "optim",
robust_estimation = T,
robust_method = "huber")
coefficients.gsusie(res_gs_vn)
data.frame(variable = paste0("X", effective_idx), effect_size = sqrt(h2) * bb)
RES
# Huber-weighting:
res_gs_hb <- gsusie(X, y, family = "binomial",
max_iters = 200,
estimate_prior_variance = F,
estimate_prior_method = "optim",
robust_estimation = T,
robust_method = "huber")
coefficients.gsusie(res_gs_hb)
coefficients.gsusie(res_gs_vn, top_n = 5)
coefficients.gsusie(res_gs_hb, top_n = 5)
nn <- 500
pp <- 1000
h2 <- 0.5
X <- matrix(rnorm(nn * pp), ncol = pp)
effect_idx <- sort(sample(1 : pp, size = 5))
bb <- rnorm(length(effect_idx), sd = sqrt(2))
data.frame(variable = paste0("X", effective_idx), effect_size = sqrt(h2) * bb)
Eta <- sqrt(h2) * X[,effect_idx, drop = F] %*% as.matrix(bb) +
sqrt(1 - h2) * rnorm(nn)
y <- rbinom(nn, 1, prob = expit(Eta))
X <- cbind(X, 1)  # Intercept is always put at last
colnames(X) <- paste0("X", c(1:pp, 0))
# Vanilla:
res_gs_vn <- gsusie(X, y, family = "binomial",
max_iters = 200,
estimate_prior_variance = T,
estimate_prior_method = "optim",
robust_estimation = F)
coefficients.gsusie(res_gs_vn, top_n = 5)
# Huber-weighting:
res_gs_hb <- gsusie(X, y, family = "binomial",
max_iters = 200,
estimate_prior_variance = F,
estimate_prior_method = "optim",
robust_estimation = T,
robust_method = "huber")
coefficients.gsusie(res_gs_hb, top_n = 5)
data.frame(variable = paste0("X", effect_idx), effect_size = sqrt(h2) * bb)
RES
.filenames <- gen_filenames(n = 500, p = 1000, h2 = 0.5, "poisson")
RES <- readRDS(.save.path %&% .filenames)
RES
install.packages("PRPRC")
.filenames <- gen_filenames(n = 500, p = 1000, h2 = 0.1, "poisson")
RES <- readRDS(.save.path %&% .filenames)
RES
?glmnet
getwd()
setwd("~/Desktop/CPSC538L")
setwd("~/Desktop/CPSC538L/Assignments")
getwd()
?rmultinom
SS <- rmultinom(100, size = 3)
SS <- rmultinom(100, size = 3, prob = rep(1/5, times = 5))
SS <- rmultinom(10, size = 3, prob = rep(1/5, times = 5))
SS
?sample
SS <- sample(1:5, size = 10, replace = T)
SS
SS <- sample(1:5, size = 100, replace = T)
SS
mean(SS ==1)
mean(SS ==2)
mean(SS ==3)
mean(SS ==4)
mean(SS ==5)
SS <- sample(1:8, size = 100, replace = T)
TT <- 1/4 * SS + rnorm(nn)
nn <- 100  # sample size
TT <- 1/4 * SS + rnorm(nn)
TT
YY <- -1 * TT + 1/2 * SS + rnorm(nn)
YY
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summar(res.csl)
summary(res.csl)
# SS <- sample(1:8, size = nn, replace = T)  # confounder
SS <- rnorm(nn)
TT <- 1/4 * SS + rnorm(nn)
YY <- -1 * TT + 1/2 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
set.seed(123)
nn <- 100  # sample size
SS <- sample(1:8, size = nn, replace = T)  # confounder
# SS <- rnorm(nn)
TT <- 1/4 * SS + rnorm(nn)
# SS <- rnorm(nn)
TT <- 1/4 * SS
YY <- -1 * TT + 1/2 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
mean(SS)
mean(SS)/4
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
set.seed(20231015)
nn <- 100  # sample size
SS <- sample(1:8, size = nn, replace = T)  # confounder
# SS <- rnorm(nn)
TT <- 1/4 * SS
YY <- -1 * TT + 1/2 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
# SS <- rnorm(nn)
TT <- 1/4 * SS + rnorm(nn)
YY <- -1 * TT + 1/2 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
YY <- 1/2 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
YY <- 1 * TT + 1/2 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
YY <- 1 * TT - 1/2 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
YY <- 1 * TT - 2 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
SS <- sample(1:4, size = nn, replace = T)  # confounder
TT <- 1/4 * SS + rnorm(nn)    # Treatment
YY <- 1 * TT - 2 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
TT <- 1/4 * SS + rnorm(nn)    # Treatment
YY <- -3 * TT + 1 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
TT <- 2 * SS + rnorm(nn)    # Treatment
YY <- -3 * TT + 1 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
TT <- 1/2 * SS + rnorm(nn)    # Treatment
YY <- -1 * TT + 5 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
YY <- -1 * TT + 4 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
plot(TT, YY)
library(tidyverse)
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, Y = YY))
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, Y = YY)) +
geom_point()
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, Y = YY)) +
geom_points()
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, Y = YY)) +
geom_point()
?geom_point
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point()
SS <- sample(1:4, size = nn, replace = T)  # confounder
TT <- 1/2 * SS    # Treatment
YY <- -1 * TT + 4 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
TT <- 1/2 * SS + 0.1 * rnorm(nn)    # Treatment
YY <- -1 * TT + 4 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
## Figures
library(tidyverse)
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point()
TT <- 1/2 * SS + 0.5 * rnorm(nn)    # Treatment
YY <- -1 * TT + 4 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
## Figures
library(tidyverse)
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point()
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point(aes(color = factor(SS))) +
e
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point(aes(color = factor(SS)))
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point(aes(color = factor(SS))) +
labs(x = "Treatment(T)", y = "Response(Y)", color = "Confounder(S)")
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point(aes(color = factor(SS))) +
labs(x = "T", y = "Y", color = "S")
TT <- 1/2 * SS + rnorm(nn)    # Treatment
YY <- -1 * TT + 4 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
## Figures
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point()
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point(aes(color = factor(SS))) +
labs(x = "T", y = "Y", color = "S")
## Figures
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point()
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point(aes(color = factor(SS))) +
labs(x = "T", y = "Y", color = "S")
TT <- SS + rnorm(nn)    # Treatment
YY <- -1 * TT + 4 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
TT <- SS + rnorm(nn)    # Treatment
YY <- -1 * TT + 4 * SS + rnorm(nn)
# Observational quantities between YY ~ TT
res.obs <- lm(YY ~ TT)
summary(res.obs)
# Causal quantities between YY ~ TT adjusting SS
res.csl <- lm(YY ~ TT + SS)
summary(res.csl)
## Figures
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point()
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point(aes(color = factor(SS))) +
labs(x = "T", y = "Y", color = "S")
## Figures
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point()
data.frame(TT = TT, YY = YY, SS = SS) %>%
ggplot(aes(x = TT, y = YY)) +
geom_point(aes(color = factor(SS))) +
labs(x = "T", y = "Y", color = "S")
mean(YY)
mean(SS)
summary(res.obs)
summary(res.csl)
