nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", 0:pp)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim")
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 5)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
require(susieR)
res_su <- susie(X, y)
summary(res_su)
coefficients.gsusie(res_su, top_n = 5)
susie_plot(res_su, y = "PIP")
set.seed(20230927)
library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim")
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 5)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 5)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
require(susieR)
res_su <- susie(X, y)
summary(res_su)
coefficients.gsusie(res_su, top_n = 5)
susie_plot(res_su, y = "PIP")
res_gs <- gsusie(X, y, family = "poisson", maxL = 7,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_variance = T,
estimate_prior_method = "optim",
verbose = T
)
gsusie_plot(res_gs, y = "PIP")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 5)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
saveRDS(list(X = X, y = y, h2 = 1), file = "./data/pois-dataset-1.rds")
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
AA <- res_gs$alpha
require(susieR)
res_su <- susie(X, y)
summary(res_su)
coefficients.gsusie(res_su, top_n = 5)
susie_plot(res_su, y = "PIP")
AA <- res_gs$alpha
round(AA[,150])
plot(AA[1,])
plot(res_gs$lbf_variable[1,])
round(AA[,150])
plot(res_gs$lbf_variable[9,])
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 0.8
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 0.6
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
source("~/Dropbox/genetics.susie/gsusie/R/update_each_effect.r", echo=TRUE)
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 0.6
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
source("~/Dropbox/genetics.susie/gsusie/R/update_each_effect.r", echo=TRUE)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
source("~/Dropbox/genetics.susie/gsusie/R/update_each_effect.r", echo=TRUE)
source("~/Dropbox/genetics.susie/gsusie/R/weighted_single_effect_regression.r", echo=TRUE)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
plot(y)
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 0.6
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
plot(y)
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
plot(y)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
plot(y)
max(y)
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
plot(y)
max(y)
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
plot(y)
max(y)
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
# set.seed(20230927)
# library(MASS)
## Synthesize data
nn <- 500
pp <- 1000
h2 <- 1
X <- matrix(rnorm(nn * pp), ncol = pp)
Eta <- sqrt(h2) * (-2 * X[,1] + 0.5 * X[,6]) + (1 - sqrt(h2)) * rnorm(nn)
expEta <- exp(Eta)
y1 <- rpois(nn, expEta)
y <- exp(scale(log1p(y1)))
## our method
X <- cbind(X, 1)
colnames(X) <- paste0("X", c(1:pp, 0))
res_gs <- gsusie(X, y, family = "poisson", maxL = 10,
max_iters = 500, tol = 1e-2,
coef_prior_variance = 1,
estimate_prior_method = "optim",
verbose = T)
gsusie_plot(res_gs, y = "PIP")
plot(res_gs$elbo, xlab = "iteration", ylab = "elbo")
summary.gsusie(res_gs)
coefficients.gsusie(res_gs, top_n = 10)
# print("Estimated prior variance for the 10 WSER models:")
# gsusie_get_prior_variance(res_gs)
plot(y)
max(y)
